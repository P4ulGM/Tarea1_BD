// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema


//To migrate this file use the command: npx prisma migrate dev
generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}


//  
//  model User {
//    id    Int     @id @default(autoincrement())
//    email String  @unique
//    name  String?
//    lastname String?
//    posts Post[]
//  }
//  
//  model Post {
//    id        Int     @id @default(autoincrement())
//    title     String
//    content   String?
//    published Boolean @default(false)
//    author    User    @relation(fields: [authorId], references: [id])
//    authorId  Int
//  }
//  
//  

model Trabajos {
  id Int @id @default(autoincrement())
  descripcion String? @db.VarChar(45)
  sueldo Int
  trabajadores Personaje_tiene_trabajo[]
}

model Personajes {
  id Int @id @default(autoincrement())
  nombre String @db.VarChar(45)
  fuerza Int
  fecha_nacimiento DateTime @db.Date
  objeto String? @db.VarChar(30)
  trabajos Personaje_tiene_trabajo[]
  karts Karts[]
  reino Personaje_habita_reino[]
}


model Personaje_tiene_trabajo {
  id_trabajo Int
  id_pesonaje Int
  fecha_inicio DateTime @db.Date
  fecha_termino DateTime @db.Date
  trabajo Trabajos @relation(fields: [id_trabajo], references: [id])
  personaje Personajes @relation(fields: [id_pesonaje], references: [id])
  @@id([id_pesonaje,id_trabajo])
}

model Karts {
  id Int @id @default(autoincrement())
  modelo String @db.VarChar(45)
  color String @db.VarChar(45)
  velocidad_maxima Int?
  id_personaje Int 
  personaje Personajes? @relation(fields: [id_personaje], references: [id])
}

model Personaje_habita_reino {
  id_personaje Int
  id_reino Int 
  fecha_registro DateTime @default(now())
  es_gobernante Boolean
  personaje Personajes @relation(fields: [id_personaje], references: [id])
  reino Reinos @relation(fields: [id_reino], references: [id])
  @@id([id_personaje,id_reino])
}

model Reinos {
  id Int @id @default(autoincrement())
  nombre String @db.VarChar(45)
  ubicacion String @db.VarChar(45)
  superficie Int
  habitantes Personaje_habita_reino[]
  defensas Defensas[]
  diplomacia1 Diplomacias[] @relation("reino1")
  diplomacia2 Diplomacias[] @relation("reino2")
}

model Defensas {
  id Int @id @default(autoincrement())
  defensa String 
  reinos Reinos[]
}

model Diplomacias {
  id_reino_1 Int
  id_reino_2 Int
  es_aliado Boolean
  reino_1 Reinos @relation("reino1",fields: [id_reino_1], references: [id])
  reino_2 Reinos @relation("reino2", fields: [id_reino_2], references: [id])
  @@id([id_reino_1,id_reino_2])

}